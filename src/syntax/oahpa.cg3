DELIMITERS = "<.>" "<?>" "<!>" "<..>" "<...>" "<Â¶>" "</p>" "<p>" QDL "^vastas" ; 

PARENTHESES = ("<(>" "<)>") ("<[>" "<]>") ("<{>" "<}>") (CLO CLC)  ; 

LIST >>> = >>>  ;
LIST <<< = <<<  ;
LIST QM = ? ;
LIST QDL = QDL "^vastas" ;

LIST Cor = &correct ;
LIST CLB = "," ";" "-" "(" ")" CC CS ;

LIST V = V ;
LIST S = N ;
LIST SP = N Pron ;
LIST A = A ;

LIST Nom = Nom  ;
LIST Gen = Gen  ;
LIST Par = Par ;
LIST Tra = Tra ;
LIST Ine = Ine ;
LIST Ela = Ela ;
LIST Ade = Ade ;
LIST All = All ;
LIST Abl = Abl ;
LIST Ess = Ess ;
LIST Abe = Abe ;
LIST Kom = Com ;
LIST Trm = Trm ;
LIST IllAdt = (Pl Ill) (Sg Ill) ;
LIST Adit = (Sg Ill) ;
LIST NiNaTaGa = Trm Ess Abe Com ;
LIST Sise = Ine Ade Ela Abl (Pl Ill) (Sg Ill) All ;
LIST case = Nom Gen Par (Sg Ill) (Pl Ill) Ine Ela All Ade Abl Tra Trm Ess Abe Com ;

LIST Sg = Sg ;
LIST Pl = Pl ;

LIST Pps1sg = (Ps1 Sg) ;               
LIST Pps2sg = (Ps2 Sg) ;
LIST Pps3sg = (Ps3 Sg) ;
LIST Pps1pl = (Ps1 Pl) ;               
LIST Pps2pl = (Ps2 Pl) ;
LIST Pps3pl = (Ps3 Pl) ;

LIST SPps3sg = (Ps3 Sg) (N Sg) ;
LIST SPps3pl = (Ps3 Pl) (N Pl) ;


LIST Vps12 = (V Pl1) (V Sg1) (V Pl2) (V Sg2) ;
LIST Vps1 = (V Pl1) (V Sg1) ;
LIST Vps1sg = (V Sg1) ;
LIST Vps1pl = (V Pl1) ;
LIST Vps2 = (V Pl2) (V Sg2) ;
LIST Vps2sg = (V Sg2) ;
LIST Vps2pl = (V Pl2) ;
LIST Vps3sg = (V Sg3) ;
LIST Vps3pl = (V Pl3) ;

LIST SgVerb = (V Sg1) (V Sg2) (V Sg3) ;
LIST PlVerb = (V Pl1) (V Pl2) (V Pl3) ;

LIST FinV = Ind Imprt Cond Quot ;
LIST InfP = *InfP ;
LIST Inf = Inf ;
LIST Neg = Neg ;

LIST Prs = Prs ;
LIST Prt = Prt ;

LIST Tud = (Prt Prc Impers) Der/tu Der#tu ;
LIST Nud = (Prt Prc Pers) Der/nu Der#nu ;
LIST NudTud = (Prt Prc) Der/nu Der#nu Der/tu Der#tu ;
LIST NudTudDes = (Prt Prc) Ger Der/nu Der#nu Der/tu Der#tu ;



# mappings

MAP (&err-spellingerror) TARGET QM - QDL ;


#>>         &grm-non-agr-subj-v     (error in subject-verb agreement)

ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps1sg (*0 Pps1sg + (c@subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps1pl (*0 Pps1pl + (c@subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps2sg (*0 Pps2sg + (c@subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps2pl (*0 Pps2pl + (c@subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps3sg (*0 SPps3sg + (c@subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (c@fmv) - Cor - Neg - Vps3pl (*0 SPps3pl + (c@subj) BARRIER CLB) ; 
# (c@subj) + Cor? or anyway? coordination to be handled separately

ADD (&grm-non-agr-subj-v) TARGET Pps1sg + (c@subj) - Cor (*0 (c@fmv) - Vps1sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps1pl + (c@subj) - Cor (*0 (c@fmv) - Vps1pl - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps2sg + (c@subj) - Cor (*0 (c@fmv) - Vps2sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps2pl + (c@subj) - Cor (*0 (c@fmv) - Vps2pl - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET SPps3sg + (c@subj) - Cor (*0 (c@fmv) - Vps3sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET SPps3pl + (c@subj) - Cor (*0 (c@fmv) - Vps3pl - Neg BARRIER CLB) ; 

ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps1sg (*0 Pps1sg + (c@prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps1pl (*0 Pps1pl + (c@prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps2sg (*0 Pps2sg + (c@prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps2pl (*0 Pps2pl + (c@prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps3sg (*0 SPps3sg + (c@prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (c@fmv) - Cor - Neg - Vps3pl (*0 SPps3pl + (c@prd) BARRIER CLB) ; 

ADD (&grm-non-agr-v-prd) TARGET Pps1sg + (c@prd) - Cor (*0 (c@fmv) - Vps1sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps1pl + (c@prd) - Cor (*0 (c@fmv) - Vps1pl - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps2sg + (c@prd) - Cor (*0 (c@fmv) - Vps2sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps2pl + (c@prd) - Cor (*0 (c@fmv) - Vps2pl - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET SPps3sg + (c@prd) - Cor (*0 (c@fmv) - Vps3sg - Neg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET SPps3pl + (c@prd) - Cor (*0 (c@fmv) - Vps3pl - Neg BARRIER CLB) ; 


#>>         &grm-incorr-tense       (incorrect tense)

ADD (&grm-incorr-tense) TARGET V + (c@prs c@fmv) - Cor - Prs ;
ADD (&grm-incorr-tense) TARGET V + (c@prt c@fmv) - Cor - Prt ;

# maybe these cases have some other tags, can be replaced:
ADD (&grm-incorr-verbform) TARGET V - Cor - Neg (-1 ("ei")) ;
ADD (&grm-incorr-verbform) TARGET V - Cor - Inf - NudTudDes (*0 (c@fmv) + InfP BARRIER CLB) ;

#>>         &grm-non-agr-noun-mod   (error in noun-modifier agreement)

ADD (&grm-non-agr-noun-mod) TARGET SP + (c@nn>) - Cor - Gen ;

#>>         &grm-missing-ade        (wrong case, should be adessive)

ADD (&grm-missing-ade) TARGET SP - Cor - Ade - Gen (-1 A + Cor + Ade) ;

ADD (&grm-missing-ade) TARGET A - Cor - Ade - NudTud (0 case) (1 SP + Cor + Ade) ;


#UNMAP UNSAFE (&correct) ;

END 
