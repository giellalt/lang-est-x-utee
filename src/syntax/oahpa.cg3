DELIMITERS = "<.>" "<?>" "<!>" "<..>" "<...>" "<Â¶>" "</p>" "<p>" QDL "^vastas" ; 

PARENTHESES = ("<(>" "<)>") ("<[>" "<]>") ("<{>" "<}>") (CLO CLC)  ; 

LIST >>> = >>>  ;
LIST <<< = <<<  ;
LIST QM = ? ;
LIST QDL = QDL "^vastas" ;

MAP (&correct) (*) - QDL (<*-1 >>> LINK <*-1 >>> LINK NOT 1 QDL) ;
MAP (&correct) (*) - QDL (<*-1 >>> LINK <*-1 >>> LINK <*-1 >>> LINK <*-1 >>> LINK NOT 1 QDL) ;

# need to correlate learner answer words with correct ones
# otherwise, for example, in the case of missing agreement cannot determine which wordform is incorrect
# assume for the sake of simplicity that there are no repeated words

ADD KEEPORDER (&subj) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@SUBJ) OR ("$2$4"v) + (@SUBJ));
ADD KEEPORDER (&obj) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@OBJ) OR ("$2$4"v) + (@OBJ));
ADD KEEPORDER (&advl) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@ADVL) OR ("$2$4"v) + (@ADVL));
ADD KEEPORDER (&prd) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@PRD) OR ("$2$4"v) + (@PRD));
ADD KEEPORDER (&nn>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@NN>) OR ("$2$4"v) + (@NN>));
ADD KEEPORDER (&<nn) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<NN) OR ("$2$4"v) + (@<NN));

ADD KEEPORDER (&an>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@AN>) OR ("$2$4"v) + (@AN>));
ADD KEEPORDER (&<an) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<AN) OR ("$2$4"v) + (@<AN));
ADD KEEPORDER (&dn>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@DN>) OR ("$2$4"v) + (@DN>));
ADD KEEPORDER (&<dn) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<DN) OR ("$2$4"v) + (@<DN));
ADD KEEPORDER (&kn>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@KN>) OR ("$2$4"v) + (@KN>));
ADD KEEPORDER (&<kn) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<KN) OR ("$2$4"v) + (@<KN));
ADD KEEPORDER (&infn>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@INFN>) OR ("$2$4"v) + (@INFN>));
ADD KEEPORDER (&<infn) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<INFN) OR ("$2$4"v) + (@<INFN));

ADD KEEPORDER (&fmv) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@FMV) OR ("$2$4"v) + (@FMV));
ADD KEEPORDER (&fcv) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@FCV) OR ("$2$4"v) + (@FCV));
ADD KEEPORDER (&imv) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@IMV) OR ("$2$4"v) + (@IMV));
ADD KEEPORDER (&icv) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@ICV) OR ("$2$4"v) + (@ICV));
ADD KEEPORDER (&neg) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@NEG) OR ("$2$4"v) + (@NEG));

ADD KEEPORDER (&p>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@P>) OR ("$2$4"v) + (@P>));
ADD KEEPORDER (&<p) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<P) OR ("$2$4"v) + (@<P));
ADD KEEPORDER (&q>) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@Q>) OR ("$2$4"v) + (@Q>));
ADD KEEPORDER (&<q) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@<Q) OR ("$2$4"v) + (@<Q));

ADD KEEPORDER (&i) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@I) OR ("$2$4"v) + (@I));
ADD KEEPORDER (&j) TARGET (*) (0 ("<(.*)>"r)) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r)) 
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> 
	LINK *1 ("<$1>"v) + (@J) OR ("$2$4"v) + (@J));


# mappings

MAP KEEPORDER (&grm-correct) TARGET (*) (0 ("<(.*)>"r))
	(<*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK *1 ("<$1>"v));

MAP (&err-spellingerror) TARGET QM - QDL ;

#ADD KEEPORDER ("$1$3"v) TARGET (*) (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
#	(-4 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 4 (*)) ;

ADD KEEPORDER (&grm-wrong-lemma) TARGET (*) - QDL (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(-1 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK NOT 1 ("$1$3"v));
ADD KEEPORDER (&grm-wrong-lemma) TARGET (*) - QDL (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(-2 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK NOT 2 ("$1$3"v));
ADD KEEPORDER (&grm-wrong-lemma) TARGET (*) - QDL (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(-3 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK NOT 3 ("$1$3"v));
ADD KEEPORDER (&grm-wrong-lemma) TARGET (*) - QDL (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(-4 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK NOT 4 ("$1$3"v));
ADD KEEPORDER (&grm-wrong-lemma) TARGET (*) - QDL (0 ("(.*)[^>]"r))(0 ("[^<](.*)(.)"r))
	(-5 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK NOT 5 ("$1$3"v));

LIST HOMS = Hom1 Hom2 Hom3 Hom4 Hom5 Hom6 Hom7 Hom8 Hom9 ;
ADD (&grm-wrong-homonym) TARGET HOMS (0 $$HOMS)(-1 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 1 $$HOMS) ;
ADD (&grm-wrong-homonym) TARGET HOMS (0 $$HOMS)(-2 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 2 $$HOMS) ;
ADD (&grm-wrong-homonym) TARGET HOMS (0 $$HOMS)(-3 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 3 $$HOMS) ;
ADD (&grm-wrong-homonym) TARGET HOMS (0 $$HOMS)(-4 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 4 $$HOMS) ;
ADD (&grm-wrong-homonym) TARGET HOMS (0 $$HOMS)(-5 >>> LINK <*-1 QDL LINK <*-1 QDL LINK >*1 >>> LINK 5 $$HOMS) ;


LIST Cor = &grm-correct ;
LIST CLB = "," ";" "-" "(" ")" CC CS ;

LIST V = V ;
LIST S = N ;
LIST SP = N Pron ;
LIST A = A ;

LIST Nom = Nom  ;
LIST Gen = Gen  ;
LIST Par = Par ;
LIST Tra = Tra ;
LIST Ine = Ine ;
LIST Ela = Ela ;
LIST Ade = Ade ;
LIST All = All ;
LIST Abl = Abl ;
LIST Ess = Ess ;
LIST Abe = Abe ;
LIST Kom = Com ;
LIST Trm = Trm ;
LIST IllAdt = (Pl Ill) (Sg Ill) ;
LIST Adit = (Sg Ill) ;
LIST NiNaTaGa = Trm Ess Abe Com ;
LIST Sise = Ine Ade Ela Abl (Pl Ill) (Sg Ill) All ;
LIST case = Nom Gen Par (Sg Ill) (Pl Ill) Ine Ela All Ade Abl Tra Trm Ess Abe Com ;

LIST Sg = Sg ;
LIST Pl = Pl ;

LIST Pps1sg = (Ps1 Sg) ;               
LIST Pps2sg = (Ps2 Sg) ;
LIST Pps3sg = (Ps3 Sg) ;
LIST Pps1pl = (Ps1 Pl) ;               
LIST Pps2pl = (Ps2 Pl) ;
LIST Pps3pl = (Ps3 Pl) ;

LIST SPps3sg = (Ps3 Sg) (N Sg) ;
LIST SPps3pl = (Ps3 Pl) (N Pl) ;


LIST Vps12 = (V Pl1) (V Sg1) (V Pl2) (V Sg2) ;
LIST Vps1 = (V Pl1) (V Sg1) ;
LIST Vps1sg = (V Sg1) ;
LIST Vps1pl = (V Pl1) ;
LIST Vps2 = (V Pl2) (V Sg2) ;
LIST Vps2sg = (V Sg2) ;
LIST Vps2pl = (V Pl2) ;
LIST Vps3sg = (V Sg3) ;
LIST Vps3pl = (V Pl3) ;

LIST SgVerb = (V Sg1) (V Sg2) (V Sg3) ;
LIST PlVerb = (V Pl1) (V Pl2) (V Pl3) ;

LIST FinV = Ind Imprt Cond Quot ;
LIST InfP = *InfP ;
LIST Inf = Inf ;
LIST Neg = Neg ;

LIST Prs = Prs ;
LIST Prt = Prt ;

LIST Tud = (Prt Prc Impers) Der/tu Der#tu ;
LIST Nud = (Prt Prc Pers) Der/nu Der#nu ;
LIST NudTud = (Prt Prc) Der/nu Der#nu Der/tu Der#tu ;
LIST NudTudDes = (Prt Prc) Ger Der/nu Der#nu Der/tu Der#tu ;


#>>         &grm-non-agr-subj-v     (error in subject-verb agreement)

ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps1sg (*0 Pps1sg + (&subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps1pl (*0 Pps1pl + (&subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps2sg (*0 Pps2sg + (&subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps2pl (*0 Pps2pl + (&subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps3sg (*0 SPps3sg + (&subj) BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET V + (&fmv) - Cor - Neg - Vps3pl (*0 SPps3pl + (&subj) BARRIER CLB) ; 
# (&subj) + Cor? or anyway? coordination to be handled separately

ADD (&grm-non-agr-subj-v) TARGET Pps1sg + (&subj) - Cor (*0 (&fmv) - Vps1sg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps1pl + (&subj) - Cor (*0 (&fmv) - Vps1pl BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps2sg + (&subj) - Cor (*0 (&fmv) - Vps2sg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET Pps2pl + (&subj) - Cor (*0 (&fmv) - Vps2pl BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET SPps3sg + (&subj) - Cor (*0 (&fmv) - Vps3sg BARRIER CLB) ; 
ADD (&grm-non-agr-subj-v) TARGET SPps3pl + (&subj) - Cor (*0 (&fmv) - Vps3pl BARRIER CLB) ; 

ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps1sg (*0 Pps1sg + (&prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps1pl (*0 Pps1pl + (&prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps2sg (*0 Pps2sg + (&prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps2pl (*0 Pps2pl + (&prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps3sg (*0 SPps3sg + (&prd) BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET V + (&fmv) - Cor - Neg - Vps3pl (*0 SPps3pl + (&prd) BARRIER CLB) ; 

ADD (&grm-non-agr-v-prd) TARGET Pps1sg + (&prd) - Cor (*0 (&fmv) - Vps1sg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps1pl + (&prd) - Cor (*0 (&fmv) - Vps1pl BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps2sg + (&prd) - Cor (*0 (&fmv) - Vps2sg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET Pps2pl + (&prd) - Cor (*0 (&fmv) - Vps2pl BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET SPps3sg + (&prd) - Cor (*0 (&fmv) - Vps3sg BARRIER CLB) ; 
ADD (&grm-non-agr-v-prd) TARGET SPps3pl + (&prd) - Cor (*0 (&fmv) - Vps3pl BARRIER CLB) ; 


#>>         &grm-incorr-tense       (incorrect tense)

ADD (&grm-incorr-tense) TARGET V + (&fmv) - Cor - Prs 
	(<*-1 QDL LINK <*-1 QDL LINK <*-1 <<< LINK *-1 (@FMV) + Prs) ;
ADD (&grm-incorr-tense) TARGET V + (&fmv) - Cor - Prt 
	(<*-1 QDL LINK <*-1 QDL LINK <*-1 <<< LINK *-1 (@FMV) + Prt) ;

# maybe these cases have some other tags, can be replaced:
ADD (&grm-incorr-verbform) TARGET V - Cor - Neg (-1 ("ei")) ;
ADD (&grm-incorr-verbform) TARGET V - Cor - Inf - NudTudDes (*0 (&fmv) + InfP BARRIER CLB) ;

#>>         &grm-non-agr-noun-mod   (error in noun-modifier agreement)

ADD (&grm-non-agr-noun-mod) TARGET SP + (&nn>) - Cor - Gen ;

#>>         &grm-missing-ade        (wrong case, should be adessive)

ADD (&grm-missing-ade) TARGET SP - Cor - Ade - Gen (-1 A + Cor + Ade) ;

ADD (&grm-missing-ade) TARGET A - Cor - Ade - NudTud (0 case) (1 SP + Cor + Ade) ;

#UNMAP UNSAFE (&correct) ;

END 
